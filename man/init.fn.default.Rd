% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/init_fns.R
\name{init.fn.default}
\alias{init.fn.default}
\title{Initialize a flash factor}
\usage{
init.fn.default(
  flash,
  dim.signs = rep(0, get.dim(flash)),
  tol = 1/max(get.dims(flash)),
  maxiter = 100,
  seed = 666
)
}
\arguments{
\item{flash}{A \code{flash.fit} object.}

\item{dim.signs}{This parameter can be used to constrain the sign of the
initial loadings. It should be a vector of length two with entries equal
to -1, 0, or 1. The first entry dictates the sign of the loadings
\eqn{\ell_k}, with -1 yielding nonpositive loadings, +1 yielding
nonnegative loadings, and 0 indicating that loadings should not be
constrained. The second entry of \code{dim.signs} similarly constrains
the sign of the factor \eqn{f_k}.}

\item{tol}{Convergence tolerance.}

\item{maxiter}{Maximum number of power iterations.}

\item{seed}{Since initialization is random, a default seed is set for
reproducibility.}
}
\description{
The default method for initializing a new flash factor. Essentially an
  implementation of the power method which (unlike many existing
  implementations) can handle missing data and sign constraints. For details,
  see Chapter 2.2.3 in the reference below.
}
\references{
Jason Willwerscheid (2021), \emph{Empirical Bayes Matrix Factorization:
  Methods and Applications}. Ph.D. thesis, University of Chicago.
}
\seealso{
\code{\link{init.fn.softImpute}}, \code{\link{init.fn.irlba}}
}

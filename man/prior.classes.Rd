% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/prior_classes.R
\name{as.prior}
\alias{as.prior}
\alias{prior.normal}
\alias{prior.point.normal}
\alias{prior.point.laplace}
\alias{prior.nonzero.mode}
\alias{prior.normal.mix}
\alias{prior.uniform.mix}
\alias{prior.nonnegative}
\alias{prior.nonpositive}
\title{Flashier prior classes}
\usage{
as.prior(ebnm.fn, sign = 0, ...)

prior.normal(...)

prior.point.normal(...)

prior.point.laplace(...)

prior.nonzero.mode(...)

prior.normal.mix(...)

prior.uniform.mix(...)

prior.nonnegative(...)

prior.nonpositive(...)
}
\arguments{
\item{ebnm.fn}{The function used to solve the empirical Bayes normal means
problem. Typically, this will be \code{ebnm.pn}, which is a wrapper to
\code{ebnm::ebnm}, or \code{ebnm.ash}, a wrapper to \code{ashr::ash}, but
custom functions may also be used. For details, see \code{\link{ebnm.pn}}
and \code{\link{ebnm.ash}}.}

\item{sign}{Should be set to +1 for classes of distributions with
nonnegative support and -1 for classes with nonpositive support. Only used
when initializing new factors.}

\item{...}{Additional parameters to be passed to the function used to solve
the empirical Bayes normal means problem.}
}
\description{
Classes of distributions from which priors on loadings are to be estimated.
}
\details{
\code{prior.normal} is estimated from the class of normal distributions
  \eqn{N(0, 1/a)}. \code{prior.point.normal} is estimated from the
  two-parameter class \eqn{\pi \delta(0) + (1-\pi) N(0, 1/a)}.
  \code{prior.point.laplace} replaces the normal slab with a Laplace slab,
  and \code{prior.nonzero.mode} adds a third parameter \eqn{\mu},
  so that the prior is estimated from the class \eqn{\pi \delta(\mu) +
  (1-\pi) N(\mu, 1/a)}.

\code{prior.normal.mix} is estimated from the class of scale mixtures of
  normals \eqn{\pi_0 \delta(0) + \pi_1 N(0, 1/a_1) + \ldots +
  \pi_m N(0, 1/a_m)}. \code{prior.uniform.mix} replaces
  \eqn{N(0, 1/a_j)} with \eqn{Unif(-a_j, a_j)}; \code{prior.nonnegative}
  uses mixture components \eqn{Unif(0, a_j)}; and
  \code{prior.nonpositive} uses components \eqn{Unif(-a_j, 0)}.

Custom prior classes can be created using the function \code{as.prior}.
}

% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/flash_backfit.R
\name{flash.backfit}
\alias{flash.backfit}
\title{Backfit a flash object}
\usage{
flash.backfit(
  flash,
  kset = NULL,
  extrapolate = TRUE,
  warmstart = TRUE,
  conv.crit.fn = calc.obj.diff,
  tol = set.default.tol(flash),
  maxiter = 500,
  verbose = NULL
)
}
\arguments{
\item{flash}{A \code{flash} or \code{flash.fit} object.}

\item{kset}{A vector of integers specifying which factors to backfit.
If \code{kset = NULL}, then all existing factors will be backfitted.}

\item{extrapolate}{Whether to use an extrapolation technique
inspired by Ang and Gillis (2019) to accelerate the fitting process.
Control parameters are handled via global options and can be set by
calling \code{options("extrapolate.control") <- control.param}.}

\item{warmstart}{Whether to "warmstart" backfits by initializing each factor
update at the current value of the fitted prior.}

\item{conv.crit.fn}{The function used to determine whether convergence has
occurred. TODO: details.}

\item{tol}{The convergence tolerance.}

\item{maxiter}{The maximum number of backfitting iterations. An "iteration"
is defined such that all factors in \code{kset} get updated at each
iteration.}

\item{verbose}{When and how to display progress updates. Set to
\code{0} for none, \code{1} for updates after a factor is added or a
backfit is completed, \code{2} for additional notifications about the
variational lower bound, and \code{3} for updates after every iteration.
It is also possible to output a single tab-delimited table of values
using function \code{\link{flash.set.verbose}} with \code{verbose = -1}.}
}
\description{
Backfits existing flash factors. Whereas a "greedy" fit optimizes each
  newly added factor in one go without returning to optimize previously
  added factors, a "backfit" updates all existing factors in a cyclical
  fashion.
}
